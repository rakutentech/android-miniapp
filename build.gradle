// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.androidBuildTool = '29.0.2'
    ext.androidx_appcompat = '1.2.0'
    ext.androidx_constraintLayout = '1.1.3'
    ext.androidx_coreKtx = '1.3.0'
    ext.androidx_lifecycle = '2.2.0'
    ext.androidx_crypto = '1.0.0-rc03'
    ext.androidx_test_ext = '1.1.2-rc01'
    ext.detekt = '1.1.1'
    ext.dokka_version = '0.10.0'
    ext.glide = '4.11.0'
    ext.jsr250 = '1.0'
    ext.junit = '4.12'
    ext.kluent_android = '1.48'
    ext.kotlin_coroutines = '1.3.3'
    ext.kotlin_version = '1.3.50'
    ext.material = '1.1.0-rc02'
    ext.mockito = '3.3.3'
    ext.mockwebserver = '4.7.2'
    ext.manifest_config = '0.1.0'
    ext.nhrm_mockito_kotlin = '2.2.0'
    ext.sdk_utils = '0.1.1'
    ext.retrofit = '2.9.0'
    ext.robolectric = '4.3.1'
    ext.webkit = '1.1.0'
    ext.swipe_refresh_layout = '1.1.0'
    ext.recyclerview = '1.1.0'
    ext.gson = '2.8.6'
    ext.google_ads = '19.4.0'
    ext.custom_tab = '1.2.0'

//  Build Config.
    apply from: 'config/index.gradle'
    CONFIG.versions.android.sdk.min = 23

    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }

    repositories {
        google()
        jcenter()
    }
}

plugins {
    id 'io.gitlab.arturbosch.detekt' version '1.1.1'
    id 'net.ltgt.errorprone' version '0.7'
    id 'pl.allegro.tech.build.axion-release' version '1.10.2'
    id 'org.ajoberstar.git-publish' version '2.1.3'
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.encoding = 'UTF-8'
            options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
            options.compilerArgs << "-Xmaxerrs" << "500"
        }
    }

    scmVersion {
        useHighestVersion = true
        tag {
            prefix = 'v'
            versionSeparator = ''
            versionIncrementer 'incrementMinor'
        }
    }

    project.version = scmVersion.version
}

tasks.withType(Test) {
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
    forkEvery = 100
    reports.html.enabled = false
    reports.junitXml.enabled = false
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.incremental = true
}
