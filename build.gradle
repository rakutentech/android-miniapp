// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
  ext.androidBuildTool = '29.0.2'
  ext.androidCompileSdk = 29
  ext.androidMinSdk = 21
  ext.androidx_appcompat = '1.1.0'
  ext.androidx_coreKtx = '1.2.0-alpha04'
  ext.androidx_espressoCore = '3.3.0-alpha02'
  ext.androidx_test_ext = '1.1.2-alpha02'
  ext.androidx_testRunner = '1.3.0-alpha02'
  ext.androidx_work = '2.3.0-alpha01'
  ext.dagger = '2.24'
  ext.jsr250 = '1.0'
  ext.junit = '4.12'
  ext.kotlin_version = '1.3.50'
  ext.mockito = '2.28.2'
  ext.retrofit = '2.6.1'
  ext.robolectric = '4.3'
  ext.timber = '4.7.1'
  ext.truth = '1.0'

//  Build Config.
  apply from: 'config/index.gradle'

  dependencies {
    repositories {
//    jcenter()
//    jitpack()
//    gradle()
      google()
    }
    classpath 'com.android.tools.build:gradle:3.5.2'
    classpath "digital.wup:android-maven-publish:3.6.2"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

plugins {
  id 'net.ltgt.errorprone' version '0.7'
  id 'org.jmailen.kotlinter' version "2.1.1"
}

allprojects {
  repositories {
//    artifactoryRelease()
//    artifactorySnapshot()
//    jitpack()
    google()
    jcenter()
//    mobileLibs()
  }

  gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
      options.encoding = 'UTF-8'
      options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
      options.compilerArgs << "-Xmaxerrs" << "500"
    }
  }
}

subprojects {
  // Kotlin linter tool. Source code in '/src/java' can take advantage of gradle task:
  // formatKotlin, but '/src/kotlin' can't.
  apply plugin: 'org.jmailen.kotlinter'

  kotlinter {
    ignoreFailures = false
    indentSize = 2
    continuationIndentSize = 2
    reporters = ['checkstyle', 'plain']
    experimentalRules = false
    disabledRules = []
    fileBatchSize = 30
  }
}

tasks.withType(Test) {
  maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
  forkEvery = 100
  reports.html.enabled = false
  reports.junitXml.enabled = false
}

tasks.withType(JavaCompile) {
  options.fork = true
  options.incremental = true
}
